SCP Compute개발그룹(SCP개발)
SCP 통합로그 관리 및 이상로그 Alert 자동화를 통한 Storage 상품 패턴기반 모니터링 - 운영 안정성 확보 및 장애 최소화 사례

1. 추진 배경 및 문제 정의
- SCP Storage 상품 구조: PP/PS/PG 등 다양한 오퍼링 제공, 리전별  Storage 인프라와 프로비저닝 애플리케이션이 역할별로 나누어져 있음.
- 역할 분리: 개발/기술/아키텍처/운영 부서로 역할이 구분되어 이슈 발생 시 원인 파악에 시간이 소요됨.
- 문제 발생 가능성: 개발/검증 환경에서는 발생하지 않았던 예상치 못한 에러가 애플리케이션의 다층적 구조로 인해 발생할 수 있음.
- 로그 분석의 중요성: 화면 기능이 아닌 애플리케이션 Log로만 문제의 원인을 확인할 수 있는 경우가 많아 분석이 필수적임.
- Pain Point:
  . 인프라와 프로비저닝 애플리케이션이 역할별 분리되어 문제 발생 시 원인 파악이 어려움.
  . 다양한 오퍼링으로 인해 로그 데이터가 분산되어 로그 분석 및 문제 파악이 비효율적임.
  . Storage 장비의 특성 등 사전에 문제를 예방하기 어려운 구조적 한계가 존재함.

2. 개선 활동 내용 
- 1차 :  Storage Log Monitoring 및 batch 시스템 개발  (2024.1 ~ 2024.9)
  . 목적: 스토리지 파트에서 개발한 Application(모듈)의 운영 로그를 점검하여 에러 로그를 필터링하고, 필요 시 이슈 대응 및 소스 개선에 반영.
  . 현황:
    - 매일 또는 주간 단위로 각 오퍼링별 로그 점검 수행.
    - (구) Kibana → (현) Opensearch Dashboard 를 통해 에러 로그 필터링.
    - 반복 작업으로 인해 확인자의 부담 및 피로감 증가.
  . 자동화 방안 검토 및 적용:
    - Log level 정의 및 로그 정제 작업 진행.
    - 개별 오퍼링에서 수집되던 Opensearch 로그를 Shared MB(PP)에서 통합 Opensearch로 통합.
    - 통합 Datasource에서 불필요한 에러 로그 필터링 및 지정된 기간 내 에러 로그를 Excel 파일로 추출하는 소스 개발.
    - Excel 파일에 에러 로그(첫 번째 탭) 및 각 에러별 발생 빈도(두 번째 탭) 추출.
    - 자주 발생하는 에러 로그 파악 및 위험 확인이 필요한 에러 분류, 리포팅 방안 검토.

- 2차 : Opensearch Alert을 활용한 패턴기반 모니터링 자동화 (2024.9 ~ 계속)
  . 목적: Opensearch Alert 기능을 활용하여 패턴 기반 모니터링 자동화를 구현하고, 에러 로그를 효율적으로 관리 및 리포팅.
  . Opensearch Alert 설정:
    - Data Source: Alerting 메뉴에서 대상이 되는 데이터 지정.
    - Query(DQL): 데이터 중 조회를 원하는 검색 조건 설정.
    - Triggers: 조회된 데이터 중 조건(Threshold)을 충족하고 실행할 동작 정의.
    - Action: Webhook을 통해 Channel API 호출, Messenger 및 이메일로 알림 전송 구성.
  . 패턴 기반 모니터링 자동화 적용
    - 패턴 정의: 자주 발생하는 에러 로그 패턴을 식별하고, 이를 기반으로 모니터링 규칙 설정.
    - 자동화 적용: 정의된 패턴을 기반으로 실시간 로그 모니터링 및 Alert 트리거링.
